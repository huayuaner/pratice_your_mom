# 给定一个非负整数 n ，请计算 0 到 n 之间的每个数字的二进制表示中 1 的个数，并输出一个数组。
#
#  
#
# 示例 1:
#
# 输入: n = 2
# 输出: [0,1,1]
# 解释:
# 0 --> 0
# 1 --> 1
# 2 --> 10
# 示例 2:
#
# 输入: n = 5
# 输出: [0,1,1,2,1,2]
# 解释:
# 0 --> 0
# 1 --> 1
# 2 --> 10
# 3 --> 11
# 4 --> 100
# 5 --> 101
class Solution:
    def countBits(self, n: int) -> List[int]:
        dp = [0]*(n+1)
        for i in range(1,n+1):
            # print(i, i&1, i>>1)
            dp[i] = dp[i>>1] + (i&1)
            # print(dp[i],dp[i>>1],i&1)
        return dp