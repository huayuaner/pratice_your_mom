# 在一张2D地图上小强有N座房子,因为地理位置的原因没有办法给每座房子提供水源,
# 所以小强打算修建一条平行y轴的水渠.因为这条水渠无限长.所以能够看做是一条平行于轴的直线.
# 现在小强想确定修建水渠的位置,能够使得这座房子到水渠的垂直距离和最小,请你输出最小的距离和.

# 中位数一定是一个最优解

def compute(x, n):
    x.sort()
    m = n >> 1
    if n % 2:
        return sum(x[m+1:]) - sum(x[:m])
    else:
        return sum(x[m:]) - sum(x[:m])
# 水渠位置应该有个约束，必须穿过至少一座房子。由于水渠和y轴平行，所以本题中的y坐标就没有用了，是一个很简单的数学问题。
# 依题意，不妨设x{0..n-1}是个单调不减的数列，对于i∈[0,n)，目标是使∑|xi-x|最小，要x到x0和xn-1的距离和最小，则x一定在x0~xn-1中，其到x0和xn-1的距离和均为xn-1-x0，排除掉边缘点x0和xn-1，x1~xn-2就满足条件，下面考虑该点还要到x1和xn-2的距离和最小，则x一定在x1~xn-2中……
# 每次排除掉边缘两个数据点可以得到x是数列x{0..n-1}的中位数，能够满足到任意一对边缘点的距离和都最小，即距离总和也达到了最小。事实上，使∑|xi-x|最小也是中位数的基本性质。