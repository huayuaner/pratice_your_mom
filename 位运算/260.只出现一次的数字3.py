给定一个整数数组 nums，其中恰好有两个元素只出现一次，其余所有元素均出现两次。 找出只出现一次的那两个元素。你可以按 任意顺序 返回答案。

 

进阶：你的算法应该具有线性时间复杂度。你能否仅使用常数空间复杂度来实现？

 

示例 1：

输入：nums = [1,2,1,3,2,5]
输出：[3,5]
解释：[5, 3] 也是有效的答案。
示例 2：

输入：nums = [-1,0]
输出：[-1,0]
示例 3：

输入：nums = [0,1]
输出：[1,0]


     # 位运算
        # 得到x1^x2的结果
        xornum = 0
        for num in nums:
            xornum ^= num
        # 找xor中最低位为1的位置，说明该位置x1,x2的值不同
        lb = xornum&(-xornum)
        # 以该位置为1或为0分成两类，这两类中x1，x2会被分开，其他num也会被分开，但其他num因为重复的原因会在异或中消除，出留下x1,x2
        type1, type2 = 0, 0
        for num in nums:
            if num & lb:
                type1 ^= num
            else:
                type2 ^= num
        return [type1, type2]